import { createElement } from 'lwc';
import ApmMyAssessment from 'c/apmMyAssessment';
import getPendingApplications from '@salesforce/apex/APM_apLWC_MyAssessmentController.getPendingAssessments';

jest.mock('@salesforce/label/c.APM_Attestation_Link', () => 'https://example.com/assessment', { virtual: true });

// ✅ Real Apex mock (used as a promise, since Apex methods are async when not wired)
jest.mock('@salesforce/apex/APM_apLWC_MyAssessmentController.getPendingAssessments', () => ({
    default: jest.fn()
}), { virtual: true });

function flushPromises() {
    return new Promise(resolve => setTimeout(resolve, 0));
}

describe('c-apm-my-assessment', () => {
    afterEach(() => {
        while (document.body.firstChild) {
            document.body.removeChild(document.body.firstChild);
        }
        jest.clearAllMocks();
    });

    it('renders table when applications are returned', async () => {
        // ✅ Mock resolved promise from Apex (10 records)
        getPendingApplications.mockResolvedValue([
            {
                Id: 'a1', APM_Name__c: 'Assessment 1', DueDate__c: '2025-06-30', APM_Assessment_Status__c: 'Pending'
            },
            { Id: 'a2', APM_Name__c: 'Assessment 2', DueDate__c: '2025-07-01', APM_Assessment_Status__c: 'Pending' },
            { Id: 'a3', APM_Name__c: 'Assessment 3', DueDate__c: '2025-07-02', APM_Assessment_Status__c: 'Pending' },
            { Id: 'a4', APM_Name__c: 'Assessment 4', DueDate__c: '2025-07-03', APM_Assessment_Status__c: 'Pending' },
            { Id: 'a5', APM_Name__c: 'Assessment 5', DueDate__c: '2025-07-04', APM_Assessment_Status__c: 'Pending' },
            { Id: 'a6', APM_Name__c: 'Assessment 6', DueDate__c: '2025-07-05', APM_Assessment_Status__c: 'Pending' },
            { Id: 'a7', APM_Name__c: 'Assessment 7', DueDate__c: '2025-07-06', APM_Assessment_Status__c: 'Pending' },
            { Id: 'a8', APM_Name__c: 'Assessment 8', DueDate__c: '2025-07-07', APM_Assessment_Status__c: 'Pending' },
            { Id: 'a9', APM_Name__c: 'Assessment 9', DueDate__c: '2025-07-08', APM_Assessment_Status__c: 'Pending' },
            { Id: 'a10', APM_Name__c: 'Assessment 10', DueDate__c: '2025-07-09', APM_Assessment_Status__c: 'Pending' }
        ]);

        const element = createElement('c-apm-my-assessment', {
            is: ApmMyAssessment
        });

        document.body.appendChild(element);

        await flushPromises(); // Apex call resolves
        await flushPromises(); // re-render

        const rows = element.shadowRoot.querySelectorAll('tbody tr');
        console.log('ROW COUNT:', rows.length);
        expect(rows.length).toBe(8); // page size = 8
    });
});
